name: üìö Documenta√ß√£o de Features

on:
  # Dispara apenas em mudan√ßas nas features
  push:
    branches: [main, master, develop]
    paths:
      - "frontend/src/features/**"

  # Permite execu√ß√£o manual
  workflow_dispatch:
    inputs:
      feature:
        description: "Feature espec√≠fica para documentar (opcional)"
        required: false
        type: string

# Permiss√µes necess√°rias
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  document-features:
    name: üìù Documentar Features
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: üîç Debug - Workflow iniciado
        run: |
          echo "‚úÖ Documenta√ß√£o de Features iniciada!"
          echo "üìä Informa√ß√µes:"
          echo "   - Event: ${{ github.event_name }}"
          echo "   - Branch: ${{ github.ref_name }}"
          echo "   - Repository: ${{ github.repository }}"

      - name: üì• Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN_GITHUB }}

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: üì¶ Instalar depend√™ncias
        working-directory: ./docs-automation
        run: |
          echo "üîÑ Instalando depend√™ncias da documenta√ß√£o..."
          npm ci --no-audit --no-fund --progress=false || npm install --no-audit --no-fund --progress=false
          echo "‚úÖ Depend√™ncias instaladas!"

      - name: üîç Verificar vari√°veis de ambiente
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          echo "üîê Verificando configura√ß√µes..."

          if [ -z "$OPENAI_API_KEY" ]; then
            echo "‚ùå OPENAI_API_KEY n√£o configurada"
            exit 1
          fi
          echo "‚úÖ OpenAI API Key configurada (${#OPENAI_API_KEY} chars)"

          if [ -z "$GITHUB_TOKEN" ]; then
            echo "‚ùå TOKEN_GITHUB n√£o configurado"
            exit 1
          fi
          echo "‚úÖ GitHub Token configurado (${#GITHUB_TOKEN} chars)"

      - name: üìä Detectar features alteradas
        id: detect-features
        run: |
          echo "üîç Analisando arquivos alterados..."

          # Obter arquivos alterados (√∫ltimos 2 commits para capturar merge)
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Arquivos alterados:"
          echo "$CHANGED_FILES"

          # Filtrar apenas features
          FEATURE_CHANGES=$(echo "$CHANGED_FILES" | grep "frontend/src/features/" | cut -d'/' -f4 | sort | uniq)

          if [ -z "$FEATURE_CHANGES" ]; then
            echo "‚ÑπÔ∏è Nenhuma feature alterada detectada"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "üìã Features alteradas detectadas:"
            echo "$FEATURE_CHANGES"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "features<<EOF" >> $GITHUB_OUTPUT
            echo "$FEATURE_CHANGES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: üéØ Gerar documenta√ß√£o das features
        if: steps.detect-features.outputs.has_changes == 'true'
        working-directory: ./docs-automation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          MANUAL_FEATURE: ${{ github.event.inputs.feature }}
        run: |
          echo "üöÄ Gerando documenta√ß√£o das features..."
          node scripts/analyze-features.js

      - name: üìä Resumo da execu√ß√£o
        if: always()
        run: |
          echo "## üìö Documenta√ß√£o de Features" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.detect-features.outputs.has_changes }}" = "true" ]; then
            echo "‚úÖ **Features documentadas:**" >> $GITHUB_STEP_SUMMARY
            echo '${{ steps.detect-features.outputs.features }}' | while read feature; do
              if [ -n "$feature" ]; then
                echo "- üìÑ [$feature](../../wiki/Feature-$feature)" >> $GITHUB_STEP_SUMMARY
              fi
            done
          else
            echo "‚ÑπÔ∏è Nenhuma feature alterada neste commit" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üîó **Links:**" >> $GITHUB_STEP_SUMMARY
          echo "- [üìö Wiki](../../wiki)" >> $GITHUB_STEP_SUMMARY
          echo "- [üéØ √çndice de Features](../../wiki/Features-Index)" >> $GITHUB_STEP_SUMMARY

      - name: üóÇÔ∏è Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: feature-docs-logs-${{ github.run_number }}
          path: docs-automation/logs/
          retention-days: 7
          if-no-files-found: ignore
